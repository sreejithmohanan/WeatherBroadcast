package com.cbi.simulator;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

import com.cbi.simulator.bean.WeatherInfo;
import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;

public class WeatherStationManager {
	Map<String, WeatherInfo> weatherStationMaper = new HashMap<String, WeatherInfo>();
	ExecutorService executorService = Executors.newFixedThreadPool(10);

	
	
	public void loadWeatherStations() {
		 Gson gson = new Gson();
		BufferedReader br;
		try {
			Type listType = new TypeToken<ArrayList<WeatherInfo>>(){}.getType();
			br = new BufferedReader( new FileReader("config/config.json"));
			List<WeatherInfo> weatherStations = gson.fromJson(br,listType); 
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		}
		
	}

	public void startWeatherStations() {
		synchronized (weatherStationMaper) {

			Collection<WeatherInfo> weatherStations = weatherStationMaper
					.values();
			for (WeatherInfo weatherStation : weatherStations) {
				executorService.execute(weatherStation);
			}
		}
	}

}
